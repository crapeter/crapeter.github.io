{"version":3,"file":"js/app.d6c71756.js","mappings":"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","sources":["webpack://portfolio/./src/App.vue","webpack://portfolio/./src/App.vue?7ccd","webpack://portfolio/./src/views/Home.vue","webpack://portfolio/./src/views/Home.vue?9051","webpack://portfolio/./src/views/Projects.vue","webpack://portfolio/./src/views/Projects.vue?e90d","webpack://portfolio/./src/views/ProjectDetails.vue","webpack://portfolio/./src/views/ProjectDetails.vue?2a49","webpack://portfolio/./src/router/routes.js","webpack://portfolio/./src/main.js","webpack://portfolio/webpack/bootstrap","webpack://portfolio/webpack/runtime/chunk loaded","webpack://portfolio/webpack/runtime/compat get default export","webpack://portfolio/webpack/runtime/define property getters","webpack://portfolio/webpack/runtime/global","webpack://portfolio/webpack/runtime/hasOwnProperty shorthand","webpack://portfolio/webpack/runtime/publicPath","webpack://portfolio/webpack/runtime/jsonp chunk loading","webpack://portfolio/webpack/startup"],"sourcesContent":["<template>\n  <nav>\n    <div class=\"cont\">\n      <div class=\"left\">\n        <router-link to=\"/\">\n          <img src=\"@/assets/ttulogo.png\" alt=\"School Logo\" class=\"school-logo\">\n        </router-link>\n      </div>\n      <div class=\"right\">\n        <router-link to=\"/\">Home</router-link> |\n        <router-link to=\"/projects\">Projects</router-link>\n      </div>\n    </div>\n  </nav>\n  <router-view/>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      projects: [\n        { name: 'Chess' },\n        { name: 'Tic Tac Toe' },\n        { name: 'NodeSMS' },\n        { name: 'Hnefatafl' },\n        { name: 'Game Engine'}\n      ]\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  background: #ffb8a3;\n  color: black;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: right;\n}\n.cont {\n  display: flex;\n  justify-content: space-between;\n  padding: 0;\n}\nnav {\n  padding: 20px;\n}\nnav a {\n  font-weight: bold;\n}\nnav a.router-link-exact-active {\n  color: rgb(204, 0, 0);\n}\n.school-logo {\n  text-align: left;\n  width: 125px;\n  height: auto;\n  z-index: 10;\n}\n.right {\n  margin-top: 30px;\n  margin-right: 15px;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=2c91d23a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2c91d23a&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <div class=\"left-column\">\r\n      <div class=\"About-Me\"> \r\n        <h2>About Me</h2>\r\n        <div class=\"AMT\">\r\n          <p class=\"About-Me-Text\">My name is Craig Peterson, I'm a second year junior at Texas Tech University. I'm majoring in computer science and hope to go into either embedded system or software devolpement after graduating. Currently I'm familiar with the Java programming language and the VueJS framework as most of what I've built myself is in either of these languages/frameworks.</p>\r\n          <p class=\"About-Me-Text\">I graduated from Richland High School, located is North Richland Hills, Tx in 2022. When graduating, I was in the top ten percent of my class, size 500, I graudated with 4+ performance acknowledgements, 3+ endorsements and summa cum laude. I was a member of the Goin Band from Raiderland my first year here at Tech, but decided to drop the class this year in hopes of getting a masters degree in either 4 years or 9 semesters here at TTU.</p>\r\n          <p class=\"About-Me-Text\">I unfortunately have no working experience that is related to my field of study, with my only job being working in a Subway at Trader Village in Arlington, Tx for roughly 2 years. This is something that I'm hoping to change and have been actively trying to change. I'm currently taking a programming principles class at TTU where the language the professor is using is C. I've have really been enjoying working in C and hope to be able to go into the embedded field eventually, working in either C, C++ or maybe even Rust or Zig</p>\r\n          <p class=\"About-Me-Text\">One of my big goals is to write by own custom OS eventually, however, until I take my assembly class next semester I won't be starting on this project. Another project that I'm hoping to start after this job fair, is building another website that uses Java on the back end with spring or spring boot and then use my VueJS knowledge to build the front end. I don't know what application I'll build yet, but I was thinking some type of Rest API, hopefully being able to complete this in a decent amount of time, combining Java and JavaScript the two languages that I'm most familiar with</p>\r\n        </div>\r\n     </div>\r\n      <div class=\"github\">\r\n        <h2>GitHub Profile</h2>\r\n        <a href=\"https://github.com/crapeter\" target=\"_blank\" rel=\"noopener noreferrer\">Click to be taken to my GitHub profile</a>\r\n      </div>\r\n      <div class=\"LinkedIn\">\r\n        <h2>LinkedIn Profile</h2>\r\n        <a href=\"https://www.linkedin.com/in/craig-peterson-623132266/\" target=\"_blank\" rel=\"noopener noreferrer\">Click to be taken to my LinkedIn profile</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"right-column\">\r\n      <h2>My Resume</h2>\r\n      <div class=\"resume-section\">\r\n        <object class=\"pdf\" data=\"/resume.pdf#toolbar=0\" type=\"application/pdf\" width=\"850\" height=\"600\"></object>\r\n      </div>\r\n    </div>\r\n    \r\n  </div> \r\n</template>\r\n\r\n<script>\r\n \r\n</script>\r\n\r\n<style>\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.left-column, .right-column {\r\n  flex: 1;\r\n  padding: 20px;\r\n  margin-top: -25px;\r\n}\r\n.About-Me, .github, .resume-section, .LinkedIn {\r\n  margin-bottom: 20px;\r\n}\r\n.resume-section, .right-column {\r\n  text-align: right;\r\n}\r\n.About-Me, .github, .left-column, .LinkedIn{\r\n  text-align: left;\r\n}\r\n.About-Me-Text, .AMT {\r\n  background: #ffcebf;\r\n  margin-top: -3px;\r\n  margin-bottom: -3px;\r\n  padding: 0.5em;\r\n}\r\n.AMT {\r\n  border: 3px solid black;\r\n}\r\n.resume-section {\r\n  overflow: hidden;\r\n} \r\n.pdf {\r\n  border: none;\r\n}\r\n</style>","import { render } from \"./Home.vue?vue&type=template&id=5ce49966\"\nconst script = {}\n\nimport \"./Home.vue?vue&type=style&index=0&id=5ce49966&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <h2>My Projects</h2>\r\n    <ul>\r\n      <li v-for=\"project in projects\" :key=\"project.id\">\r\n        <router-link :to=\"`/projects/${project.id}`\" class=\"links\">{{ project.name }}</router-link>\r\n        <p>{{ project.description }}</p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        projects: [\r\n          { id: 'Chess', name: 'Chess', description: 'A chess game written in Java using the Swing Framework' },\r\n          { id: \"Tic Tac Toe\", name: 'Tic Tac Toe', description: 'Tic Tac Toe that uses AI to play against you. The AI is written using the Minimax algorithm' },\r\n          { id: 'NodeSMS', name: 'Node Student Management System', description: 'A student management system written entirely in NodeJS with basic CRUD operations' },\r\n          { id: 'Hnefatafl', name: 'Hnefatafl', description: 'Hnefatafl, the vikings game of chess, written in Java using the Swing Framework' },\r\n          { id: 'Portfolio', name: 'Portfolio', description: 'This website that was intended to be used as a portable portfolio to be shown at this job fair.' },\r\n          { id: 'FX Chess', name: 'FX Chess', description: 'This game of chess was intended to be accessible from the web and a link inside the first chess so that the game could be played.' }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  text-align: center;\r\n  margin-left: 20px;\r\n  margin-top: -30px;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  margin: 10px 0;\r\n}\r\n.links {\r\n  font-weight: bold;\r\n}\r\n</style>","import { render } from \"./Projects.vue?vue&type=template&id=693a0e76&scoped=true\"\nimport script from \"./Projects.vue?vue&type=script&lang=js\"\nexport * from \"./Projects.vue?vue&type=script&lang=js\"\n\nimport \"./Projects.vue?vue&type=style&index=0&id=693a0e76&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-693a0e76\"]])\n\nexport default __exports__","<template>\r\n  <div v-if=\"currentProject\">\r\n    <div class=\"projectDetails\">\r\n      <div class=\"leftside\">\r\n        <div class=\"button-container\">\r\n        <button class=\"shift\" @click=\"goToPreviousProject\">Previous</button>\r\n        <button class=\"shift\" @click=\"goToNextProject\">Next</button>\r\n        </div>\r\n        <h2 class=\"name\">{{ currentProject.name }}</h2>\r\n        <div class=\"text\">\r\n          <div v-for=\"(paragraph, index) in descriptionParagraphs\" :key=\"index\">\r\n            <p class=\"desc\">{{ paragraph }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"rightside\">\r\n        <div class=\"project-video\">\r\n          <video controls autoplay loop v-if=\"currentProject\" :src=\"currentProject.video\"></video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch, onBeforeUnmount, computed } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  setup() {\r\n    const projects = ref([\r\n      { id: 'Chess', name: 'Chess', video: require('@/assets/Chess.mp4'),\r\n        description: 'I’ve been working on this chess game for around one year, this however has not been continuous work. This was a passion project that I’d have to put on hold from months on end in order to focus on my actual classes. However, over the summer I was able to start making some of the final touches on the game and I would say that it is around 95% complete, with checkmate still needing to be implemented and other quality of life changes to make the game experience nicer. This chess is broken down into 18 classes, each with their own functionality.' \r\n        + '\\nThe game is set up in three separate classes, the draw class that draws the GUI, the pieceSetup class that sets up the board and hashmap, and the pieceFunctionality class, where the game logic is stored. There is another class called pieceUtils where functions and variables are stored, this class is inherited by almost every class. This game uses abstraction. I\\'m aware that this level of abstraction is frowned upon as it can become hard to track where every variable is coming from. However, I began this project after only one full coding class in highschool.'\r\n        + '\\nHere is a detail of the piece classes and the classes that help them.' \r\n        + '\\nPawns: There are 3 pawn classes, wPawn for white pawn, bPawn for black pawns and Pawn for the promotion of the pawns. Three classes were needed for the pawns because the pawns are the only pieces in chess with moves unique to the color. This means that the code for the wPawn and bPawn class is virtually the same, just the directions of the pawns moves has been modified for each class. En passant is also fully implemented in this game of chess and, like the rest of the moves the pawn makes, is unique to each pawn piece class. The Pawn class is used to generate a new JFrame that shows four options that the pawn can be promoted to. The game is halted until a selection has been made, upon which the game is continued.' \r\n        + '\\nRook, Bishop and Queen: The queen is unique as the queen combines both the rook and the bishop\\'s moves. In order to not repeat code between these pieces, I created an abstract class that stores the rook’s moves and the bishop’s moves. Then in the rook, bishop, and queen classes, I can inherit the abstract class and call the required function to display the correct moves.' \r\n        + '\\nKnight: The knight class uses an IntStream to loop through an array of the possible knight moves, making sure that the moves are centered around the knight using an inline function. This is the simplest piece class.' \r\n        + '\\nKing and check: The king follows the same principles as the knight class, using an IntStream and an inline function. The king however also needs to have a check feature to prevent the king from moving into check. There is a check class that will display the king\\'s moves if the move isn’t in check, denoted by a yellow square, and a red square will be displayed if that move puts the king into check. There is also a castle function that checks if it is possible for the king to castle, this function modifies booleans to enable and disable castling.'\r\n      },\r\n      { id: 'Tic Tac Toe', name: 'Tic Tac Toe', video: require('@/assets/Tic Tac Toe.mp4'), \r\n        description: 'This is a GUI based tic tac toe game that has an AI implemented by the minimax algorithm. This algorithm makes winning this game impossible. The minimax algorithm is a simple, recursive algorithm that will evaluate all possible outcomes of a given move and give that outcome a score, this is done through iterating through a tree holding the possible moves. After completing the evaluations of the many leaf nodes, the algorithm returns the move with the highest score. This process repeats until the game is completed, usually ending in a draw or the AI\\'s victory.' \r\n        + '\\nFor this game of tic tac toe, the human player will always take the first move, I believe that this is a big factory as to why the AI only ever wins or draws as with the human player going first, the AI is always reactionary and can implement the best moves based off of what the human does. I haven’t implemented the game to allow for the AI to go first, however if the AI was to go first, I believe that it would be possible to trick the AI and win a game.'\r\n      },\r\n      { id: 'NodeSMS', name: 'Node Student Management System', video: require('@/assets/NodeSMS.mp4'),\r\n        description: 'This was my first solo node project. A student management system that is run from the terminal. There are the basic CRUD implemented, with functions for getting and setting students info, like grades, id number, name and schedule. This program connects to a MongoDB database to allow for it to actually be usable, though using it for anything but testing wouldn’t be a good idea as everything is in the terminal.\\nOne of the features of this code that I’m not too happy with is that everything had to be made async in order to have the terminal output things correctly and to allow for the program to wait until data was fetched from Mongo to display. This means that if I was to actually scale this up for production, the program could get quite heavy and taxing on the machine.\\nThe main function of this program is called userInput and this function provides the user with the prompts that are available and then based on the users input, there is a switch statement that will determine what happens. This switch statement also has multiple functions inside of it, like crtSTD (create student), setSchedule, setGrades, studentInfo (this displays the info of one student), removeStudent and exit. In each of these functions, the function awaits for the user to input the desired info, a unique student ID, if the ID isn’t found, the program console logs that there isn’t a student with that ID and offers you another choice. This is the same for every function beside the getInput function, which returns the input as a promise, and the createStudent function, which creates the student inside Mongo.\\nInside the setSchedule function, there is a call to the getSchedule function, which allows the user to push the name of the class into an array, this array is returned to the setSchedule function and there the students.Grades is updated to be the new grades, you stop inputting grades by typing ‘q’.\\nA similar process is used inside the setGrades function, with a call to getGrades, where there is a loop that is iterating through the length of the schedule and adding a grade to an array. Before the grade is added to the array, it first checks to make sure the grade is a number, if the grade isn’t a number, it logs that the grade is an invalid input and the index isn’t incremented. Another check is that because I’m using a while loop for getting the students grades, if the length of the students schedule is zero, nothing will happen as you can’t assign grades if the student doesn’t have a schedule. Then, like the setSchedule function, the array of grades is set to the student.Grades.\\nFor the crtSTD function in the main switch, the function will wait for the input of the students name, which has no check on it besides making sure that the name is not a number and the student ID. The student ID has more checks on it because that’s how identification works. In the setStudentID function, there is a check to make sure that no one already has the same student ID as the one just entered, if there isn’t then the ID is set. After this, the createStudent function is called and the student schema, which is a JSON object that determines what a student is, for this the name and ID are required for the student, the schedule and grades can be added and modified when needed. This will create a new student with the name and ID given and store them in the Mongo database.\\nThe last two functions, studentInfo and removeStudent, are basically the same. Both will check to make sure that a student with the ID the user imputed is inside the database, then the studentInfo function will display the students name, id, schedule, and grades while the removeStudent will remove the student from the database.' \r\n      },\r\n      { id: 'Hnefatafl', name: 'Hnefatafl', video: require('@/assets/Hnefatafl.mp4'),\r\n        description: 'Hnefatafl, also called viking chess,  was something that I discovered when looking at other board games to recreate in Java and thought that since I’ve already built a functional chess game, this wouldn’t be that hard to do. This proved to be correct as I was able to successfully build this project in two afternoons, being able to reuse some of my logic from my chess game. \\nHnefatafl is set up to where there is an 11x11 board, with the white pieces forming a diamond in the center of the board with the white king being in the middle, surround by his pawn and the black pieces (all called pawns) on the edges in groups of six, with five on the outermost edges of the board and one in the middle of the five pieces one row or column in front of the other black pieces. The game is played where each piece moves like the rook in chess, they can move the full space of the board vertically or horizontally. However, unlike chess, the way you capture pieces is by trapping them either vertically or horizontally, so if there is a white piece and there is a black piece above it, then a black piece could move to the spot below the white piece and take the piece. The game is won if the king is able to make it to one of the corners of the board, however the game is lost if the king is taken.\\nThe corners are special because if there is a piece that is right next to one of the corners, then that piece can be taken by moving a piece of the opposite color to the tile that isn’t the corner, so if there is a white piece right next to the top left corner, with the corner being on its left. and a black piece moves to the tile right next to the white piece, then the white piece would be captured. I also prevented any piece that isn’t the king to be allowed to move into the corners, because otherwise the black player could just place a piece there and never move it, preventing the white player from ever winning.\\nThe game logic is extremely similar to that of chess, with there being classes that display the moves available, classes that hold helper function, and a class that controls the movement and if that move captures any pieces, along with a class that controls when a place picks up or places a piece.\\nFor the class that displays the moves, there are four for loops that iterate through the entire board, with the loops that iterate horizontally having special logic for making sure that the loop only stays in the same row. This function will display ‘a’ on every available move. This is possible by extending the class that has the helper functions, with one of those functions being displayMoves.\\nThe class that actually moves the piece has a function called ‘empty’ which means that if this function is called, the tile the player wants to move to is empty. In this function, the game check to see if the piece is a valid move, if it isn’t then the player\\'s piece will remain in the same location, but if the piece is a valid move, then the board will be modified, moving the piece there and then the function takesPiece will be called. In the takesPiece function, there is a switch statement that handles all the corner cases, and then a default case for the regular moves. Inside each of these switch statements, there is a call to the assignColors function, which assigns colors to three variables, colorHeld, colorTaking, and colorCollaborate. This function is only called if there is a piece at both locations, allowing for the possibility of a piece to be captured. After this method is called, the takePiece function is called. I know takesPiece and takePiece, I shouldn’t have named two functions so similarly but how I remember which is which is that takesPiece is more of a question and the answer is provided by assignColors and takePiece, so takePiece is the answer of takesPiece. In the takePiece function, there is a check to see if colorHeld and colorCollaborate are the same and if colorHeld and colorTaking are different. If this check is true, the piece is taken.' \r\n      },\r\n      { id: 'Portfolio', name: 'Portfolio', video: require('@/assets/portfolio.mp4'),\r\n        description: 'When thinking of ideas that I could do for this job fair, the idea of creating a website that I could use as a portfolio sounded like a good idea. So then I started brainstorming what all would be on it and I decided that I could put my resume, links to github and linked in, and then some of the projects that I’ve been working on on the website. However, I made one big mistake when deciding to do this, I only had four full days to work on it, not including all of the other homework for classes that I needed to complete as well. Another thing I should’ve considered before committing to this massive project is that I had very little experience using JavaScript, HTML and CSS, much less a JavaScript framework. However, this didn’t stop me from trying to get this project finished. \\nSo I began to research JS frameworks and settled on VueJS to build the website in. This is where my lack of actual experience in creating website began to catch up to me, in this project, there is three main vue pages, home which holds my resume, github and linked in links, and the about me text, projects which just lists out the projects I wanted to show with a brief description, and then ProjectDetails which holds a more in depth description of each project along with pictures of each project. I greatly overestimated the amount of work I thought I’d be able to do when creating this website. My initial hope was to provide some way to access all of the projects I worked on so that the hosts at the job fair could see and interact with what I’ve built, however I was unable to achieve this on such a short timeframe, especially since most of my projects are Java and I would have to rewrite most of them in JS, HTML, and CSS with the backend of the websites written in Java. Despite these shortcomings, I think that four roughly 3 days of coding and 1 day of research, that what I’ve built isn’t terrible, it certainly isn’t amazing but I think that for someone who’s never touched web development, that this was a decent try at creating a usable portfolio for this job fair.' \r\n      },\r\n      { id: 'FX Chess', name: 'FX Chess', video: require('@/assets/FX Chess.mp4'),\r\n        description: 'This is the same game as before, only completely rewritten using the JavaFX framework instead of Swing. The only reason that I wanted to rewrite chess using FX is because I knew that if I could get this up and running with jpro, then I could have a fully functional game of chess, that I wrote, inside the web and it could be accessed from this website/my portfolio. However, after completing the rewrite in two days, the only reason it took so long was because I’d never used javaFX before, I was able to get it running on a local host and then realized that this was in fact, not possible. Despite this failure, I still think that showing that I was able to completely rewrite something that had taken me a year of on and off work to complete, in a new framework is something that I could show.\\nThere are ten classes: Attacking, CapturedPieces, Castling, Check, ChessApp, ChessBoard, ChessController, ChessGame, ChessMoves, and promotion. Attacking and Check are almost exactly the same by the fact that they both loop through each direct and then check for knights and pawns, however the only difference is that in check its the king who is looking to see if there is an piece that would be attacking him if he moved to that specific tile, whereas in Attacking the piece that was just moved is looking to see if there is a king in its new range of motion.\\nNext are the special moves, castling and promotion, en passant is implemented inside of the pawns movement. Castling is exactly the same as in my other version of chess, just implemented with a 2d array instead of a hashmap. There are four loops to see if the king is able to castle with the rook and if the king is able, then a yellow square appears there and the king has the opportunity to castle. There are also multiple booleans that determine if the rooks or kings have moved and if those pieces have moved, then the ability to castle is removed. For pawn promotion, once the pawn reaches the opposing sides farthest row, a new scene is displayed that allows for the user to choose a piece to promote the pawn to the chosen piece and then closes the new panel.\\nChessMoves: this class will determine every valid move for whatever piece was just clicked via a unique function for every piece. Every valid move will then be set to true in a 2d 8x8 array of boolean, initialized to false. Then in the controller class, everytime a piece is selected to move somewhere, the location (r and c) is checked with the 2d boolean array, and if the value at the new location is true, then the piece gets moved to that location. Everytime a new piece is clicked, the entire board gets reset to false via a initialzeMoves function to prevent weird and illegal moves from happening. \\nChessApp: this is the main function, where everything gets added to the main scene and then gets launched from the main function.\\nChessGame: this function is where the styling is, this is what makes the game look somewhat decent and also where the forfeit and reset button are created and implemented. The forfeit button just sets gameover to true, which prevents any more moves from being made. The reset button then will reset all the variables and boards back to their initial values and then set gameover to false.\\nChessBoard: this is the function that sets up the two chess boards and provides functions to be performed on the board. The first function is setupBoard in which the board is colored and the images are added, this is through a StackPane that has an event listener (setOnMouseClicked) listening for any click. After this is resetBoard and getBoardGrid, which do exactly what you expect, clear the board and return the boardGrid. Then the initializeBoard function, this is where the actual board that determines the logic is, a 2d array that sets up the pieces as numbers negative for black, positive for white and zero for an empty square. After that function is the getPieceImageView which is where the images are put onto the screen, this gets called from the setupBoard function.\\nCapturedPieces: this class is used when a piece is taken to display the piece on the right side of the screen. There are four VBoxs (vertical boxes) that hold either the white pawn, every other white piece, black pawns, or every other black piece. There are getters for every VBox so that adding to them is easier along with a addCapturedPiece function to add the pieces to the VBoxs and a clearBoard function, which removes all the images from the VBoxs.\\nChessController: this is where all of the logic of the actual game is held. There are instantiations of every class, so that every method is easily accessible from this class along with multiple functions that provide functionality to the game. Firstly, there are getters for every class instantiation, so that it is possible to access the methods of those classes. Afterwards are some helper function like resetColors, which resets the board to it original colors, checkCastle which makes sure castling is available by checking to see if any of the piece that can castle have moved, if they have they are set to false, contains which sees if there is a piece at that location, and then getStackPaneAt and getImageViewFromStackPane which return the stackpane that you clicked on and then also return the image at the stackpane that you clicked on. The last two functions listed are extremely important when moving pieces on the board as they allow you to set the image at the stackpane that you just clicked, because there isn’t a 2d array of buttons or stackpanes that you can just get the location of easily. Next is the function where everything happens, the handlePieceSelected function will determine what function to call based on what you clicked on, if you clicked on a piece while not holding a piece, then you’ll pick up that piece via the pickUpPiece function. If you are holding a piece and click on an empty tile, then you’ll move that piece there, if that move is legal via the movePiece function or if you click on another tile that holds a piece, you take that piece if that other piece isn’t the same color and the move is legal vie the takePiece function. The last two functions have special purposes, the removePawn function is only called when En Passant happens, as the piece being taken isn’t actually being clicked on, so there needs to be a function to remove that pawn. The other function is findKing, which returns true if both kings are still on the board. If this returns true, then the king was taken and the game is over, although this should never happen and if a king gets put in check, I update the text to tell the player that their king is in check.' \r\n      }\r\n    ])\r\n    const currentProject = ref(null)\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n\r\n    onMounted(() => {\r\n      let projectId = route.params.id\r\n      currentProject.value = projects.value.find(p => p.id == projectId)\r\n    })\r\n    watch(() => route.params.id, (newId) => {\r\n      currentProject.value = projects.value.find(p => p.id == newId)\r\n    })\r\n   \r\n    const descriptionParagraphs = computed(() => {\r\n      return currentProject.value.description.split('\\n')\r\n    })\r\n    const goToPreviousProject = () => {\r\n      let currentIndex = projects.value.findIndex(project => project.id === currentProject.value.id)\r\n      let previousIndex = currentIndex === 0 ? projects.value.length - 1 : currentIndex - 1\r\n      router.push(`/projects/${projects.value[previousIndex].id}`)\r\n    }\r\n    const goToNextProject = () => {\r\n      let currentIndex = projects.value.findIndex(project => project.id === currentProject.value.id)\r\n      let nextIndex = (currentIndex === projects.value.length - 1) ? 0 : currentIndex + 1\r\n      router.push(`/projects/${projects.value[nextIndex].id}`)\r\n    }\r\n    return {\r\n      currentProject,\r\n      descriptionParagraphs,\r\n      goToNextProject,\r\n      goToPreviousProject\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv[v-if=\"currentProject\"] {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n.projectDetails {\r\n  display: flex;\r\n  max-width: 100vw;\r\n  width: 100%;\r\n  box-sizing: border-box; \r\n}\r\n.leftside, .rightside {\r\n  flex: 1;\r\n  box-sizing: border-box;\r\n}\r\n.name, .desc {\r\n  text-align: left;\r\n  margin-left: 20px;\r\n  color: black;\r\n}\r\n.text {\r\n  margin-left: 20px;\r\n  border: 3px solid black;\r\n  width: 38vw;\r\n  box-sizing: border-box; \r\n}\r\n.desc {\r\n  background: #ffcebf;\r\n  padding: 0.5em;\r\n  margin: 0;\r\n  height: auto;\r\n}\r\n.button-container {\r\n  text-align: left;\r\n  margin-left: 20px;\r\n}\r\n.project-video video {\r\n  margin-top: 85px;\r\n  width: 55vw;\r\n  max-width: 100vw;  \r\n  height: auto;\r\n  object-fit: contain;\r\n  box-sizing: border-box;\r\n}\r\n.shift {\r\n  margin-inline: 3px;\r\n  border-radius: 5px;\r\n  background-color: black;\r\n  color: rgb(204, 0, 0);\r\n}\r\n.shift:hover {\r\n  cursor: pointer;\r\n}\r\n.shift:active {\r\n  background-color: rgb(28, 28, 28);\r\n  color: rgb(255, 0, 0);\r\n}\r\n</style>","import { render } from \"./ProjectDetails.vue?vue&type=template&id=7402099f&scoped=true\"\nimport script from \"./ProjectDetails.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectDetails.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectDetails.vue?vue&type=style&index=0&id=7402099f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7402099f\"]])\n\nexport default __exports__","import Home from '../views/Home.vue'\nimport Projects from '../views/Projects.vue'\nimport ProjectDetails from '../views/ProjectDetails.vue'\n\nexport default [\n  { path: '/', component: Home },\n  { path: '/projects', component: Projects },\n  { path: '/projects/:id', component: ProjectDetails }\n]","import { createApp } from 'vue'\r\nimport { createRouter, createWebHistory } from 'vue-router'\r\nimport App from './App.vue'\r\nimport routes from './router/routes.js'\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\nconst app = createApp(App)\r\napp.use(router)\r\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkportfolio\"] = self[\"webpackChunkportfolio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7350); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","src","_imports_0","alt","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","_hoisted_3","_hoisted_4","_component_router_view","data","projects","name","__exports__","render","_createElementBlock","script","_Fragment","_renderList","$data","project","key","id","_toDisplayString","description","$setup","currentProject","onClick","_cache","args","goToPreviousProject","goToNextProject","_hoisted_5","_hoisted_6","descriptionParagraphs","paragraph","index","_hoisted_7","_hoisted_8","_hoisted_9","controls","autoplay","loop","video","setup","ref","require","route","useRoute","router","useRouter","onMounted","projectId","params","value","find","p","watch","newId","computed","split","currentIndex","findIndex","previousIndex","length","push","nextIndex","path","component","Home","Projects","ProjectDetails","createRouter","history","createWebHistory","routes","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}